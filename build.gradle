/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:4.0.4'
    }
}

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java'
apply plugin: 'com.bmuschko.docker-remote-api'

// Import task types
import com.bmuschko.gradle.docker.tasks.image.*

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenLocal()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {

    compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.5.0'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8'
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.0.0'

    compile group: 'org.gorvitovskiy.yuriy', name: 'service-common', version: '1.0.0'

    compile group: 'commons-io', name: 'commons-io', version: '2.6'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.6'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.6'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.6'

    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.4'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.22.0'
}
test {
    systemProperties System.getProperties()
}

jar {
    manifest { attributes 'Main-Class': 'org.state.patch.sql.Main' }
}

task copyJar(type: Copy) {
    dependsOn   'build'

    from        'build/libs/'
    into        'build/docker/'
}

task copyRuntimeLibs(type: Copy) {
    dependsOn   'copyJar'

    from configurations.runtime
    into "build/docker"
}

task copyScripts(type: Copy) {
    dependsOn   'copyRuntimeLibs'

    from "script/"
    into "build/docker"
}

task buildDockerImage(type: DockerBuildImage) {
    dependsOn   'copyScripts'

    inputDir = file('.')
    tag = 'yuriyg/state-patch-sql:latest'
}

